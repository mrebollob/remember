apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def STRING = "String"

android {
  compileSdkVersion 28
  defaultConfig {
    applicationId "com.mrb.remember"
    minSdkVersion 21
    targetSdkVersion 28
    versionCode computeVersionCode()
    versionName "0.3"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  androidExtensions {
    experimental = true
  }

  buildTypes {
    debug {
      applicationIdSuffix '.develop'
      buildConfigField STRING, "GIT_SHA", "\"DEBUG\""
      buildConfigField STRING, "BUILD_TIME", "\"DEBUG\""
      buildConfigField STRING, "BASE_URL", "\"https://mrb-leitner.herokuapp.com\""
      buildConfigField STRING, "USER_BASE_URL", "\"https://randomuser.me\""
      debuggable true
      minifyEnabled false
      testCoverageEnabled true
    }

    release {
      def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
      def buildTime = new GregorianCalendar().format("MM-dd-yyyy' 'h:mm:ss a z")
      buildConfigField STRING, "GIT_SHA", "\"${gitSha}\""
      buildConfigField STRING, "BUILD_TIME", "\"${buildTime}\""
      buildConfigField STRING, "BASE_URL", "\"https://mrb-leitner.herokuapp.com\""
      buildConfigField STRING, "USER_BASE_URL", "\"https://randomuser.me\""
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  bundle {
    language {
      enableSplit = false
    }
    density {
      enableSplit = true
    }
    abi {
      enableSplit = true
    }
  }
}

dependencies {
  // kotlin
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
  implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'
  implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'

  // Support
  implementation 'androidx.appcompat:appcompat:1.0.2'
  implementation 'androidx.core:core-ktx:1.0.1'
  implementation 'com.google.android.material:material:1.0.0'
  implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
  implementation 'androidx.coordinatorlayout:coordinatorlayout:1.0.0'
  implementation 'androidx.legacy:legacy-support-v4:1.0.0'
  implementation 'androidx.cardview:cardview:1.0.0'
  implementation "androidx.browser:browser:1.0.0"
  implementation "androidx.lifecycle:lifecycle-extensions:2.1.0-alpha04"
  implementation "androidx.lifecycle:lifecycle-viewmodel:2.1.0-alpha04"

  // Views
  implementation 'io.github.inflationx:calligraphy3:3.1.0'
  implementation 'io.github.inflationx:viewpump:1.0.0'
  implementation 'com.github.apl-devs:appintro:v4.2.3'
  implementation 'com.airbnb.android:lottie:3.0.1'

  // Glide
  implementation 'com.github.bumptech.glide:glide:4.9.0'
  annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'

  // Dagger
  implementation "com.google.dagger:dagger:$dagger_version"
  implementation "com.google.dagger:dagger-android:$dagger_version"
  implementation "com.google.dagger:dagger-android-support:$dagger_version"
  kapt "com.google.dagger:dagger-compiler:$dagger_version"
  kapt "com.google.dagger:dagger-android-processor:$dagger_version"

  // Network
  implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
  implementation 'com.squareup.okhttp3:logging-interceptor:3.13.1'

  implementation 'com.google.code.gson:gson:2.8.5'
  implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
  implementation 'com.squareup.retrofit2:retrofit:2.5.0'
  implementation 'com.jakewharton.timber:timber:4.7.1'


  testImplementation 'junit:junit:4.12'
  androidTestImplementation 'androidx.test:runner:1.1.1'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}

def computeVersionCode() {
  def stdout = new ByteArrayOutputStream()
  exec {
    commandLine 'git', 'rev-list', '--count', 'HEAD'
    standardOutput = stdout
  }
  return stdout.toString().trim().toInteger()
}